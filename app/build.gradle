apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.jh.framework"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.room:room-common:2.2.6'
    implementation 'androidx.room:room-runtime:2.2.6'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    //ConverterFactory的String依赖包
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit"
    //ConverterFactory的Gson依赖包
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    //CallAdapterFactory的Rx依赖包
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit"

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'org.apache.httpcomponents:httpcore:4.4.10'

//    implementation 'com.squareup.picasso:picasso:2.3.2'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation project(path: ':ViewLibrary')
    implementation project(path: ':AMapLibrary')
    implementation project(path: ':AspectJLibrary')
    implementation project(path: ':TakePhotoLibrary')
    implementation project(path: ':VersionUpdataLibrary')
    annotationProcessor 'androidx.room:room-compiler:2.2.6'
}

//region ajc配置
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants
//在构建工程时，执行编织
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    //  JavaCompile javaCompile = variant.javaCompile
    def javaCompile = variant.getJavaCompileProvider().get()
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath",
                         javaCompile.destinationDir.toString(),
                         "-aspectpath",
                         javaCompile.classpath.asPath,
                         "-d",
                         javaCompile.destinationDir.toString(),
                         "-classpath",
                         javaCompile.classpath.asPath,
                         "-bootclasspath",
                         project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
//endregion


